.IFJcode22
JUMP $main 

#ZACALA FUNKCIA WRITE !
LABEL $write 
CREATEFRAME 
PUSHFRAME 
DEFVAR LF@tmp 
DEFVAR LF@type_of_tmp 
DEFVAR LF@num_of_cycles 
POPS LF@num_of_cycles 
LABEL $while_write 
JUMPIFEQ $while_end LF@num_of_cycles int@0 
POPS LF@tmp 
TYPE LF@type_of_tmp LF@tmp 
JUMPIFEQ $writenull LF@type_of_tmp string@nil 
WRITE LF@tmp 
SUB LF@num_of_cycles LF@num_of_cycles int@1 
JUMP $while_write 
POPFRAME 
RETURN 
LABEL $writenull 
WRITE nil@nil 
SUB LF@num_of_cycles LF@num_of_cycles int@1 
JUMP $while_write 
LABEL $while_end 
POPFRAME 
RETURN 

#ZACALA FUNKCIA STRLEN !
LABEL $strlen 
CREATEFRAME 
PUSHFRAME 
DEFVAR LF@return_val 
POPS LF@return_val 
STRLEN LF@return_val LF@return_val 
PUSHS LF@return_val 
POPFRAME 
RETURN 

#ZACALA NOVA FUNKCIA !!!!!
LABEL $hlavni_program 
CREATEFRAME 
PUSHFRAME 
DEFVAR LF@IF_STMT 
DEFVAR LF@IF_LEFT_EXPR 
DEFVAR LF@IF_RIGHT_EXPR 
DEFVAR LF@WHILE_STMT 
DEFVAR LF@WHILE_LEFT_EXPR 
DEFVAR LF@WHILE_RIGHT_EXPR 
DEFVAR LF@INT2FLOATVAR 
DEFVAR LF@year 
POPS LF@year 
PUSHS string@\010 
PUSHS LF@year 
PUSHS string@Hello\032from\032IFJ 
PUSHS int@3
CALL $write 
DEFVAR LF@IM_FUNCTION_AND_I_RETURN_THIS 
MOVE LF@IM_FUNCTION_AND_I_RETURN_THIS float@0x1.199999999999ap+0 
INT2FLOAT LF@INT2FLOATVAR int@1 
ADD LF@IM_FUNCTION_AND_I_RETURN_THIS LF@IM_FUNCTION_AND_I_RETURN_THIS LF@INT2FLOATVAR 
DEFVAR LF@return 
MOVE LF@return LF@IM_FUNCTION_AND_I_RETURN_THIS 
PUSHS LF@return 
POPFRAME 
RETURN 

LABEL $main 
CREATEFRAME 
PUSHFRAME 
DEFVAR LF@FUNC_RETURNED_ME_A_VAR_THANK_YOU_FUNC 
DEFVAR LF@IF_STMT 
DEFVAR LF@IF_LEFT_EXPR 
DEFVAR LF@IF_RIGHT_EXPR 
DEFVAR LF@WHILE_STMT 
DEFVAR LF@WHILE_LEFT_EXPR 
DEFVAR LF@WHILE_RIGHT_EXPR 
DEFVAR LF@INT2FLOATVAR 
DEFVAR LF@tmp 
MOVE LF@tmp string@ab 
CONCAT LF@tmp LF@tmp string@c 
DEFVAR LF@tmp2 
MOVE LF@tmp2 int@1 
MOVE LF@IF_LEFT_EXPR int@1 
ADD LF@IF_LEFT_EXPR LF@IF_LEFT_EXPR int@0 
MOVE LF@IF_RIGHT_EXPR int@2 
SUB LF@IF_RIGHT_EXPR LF@IF_RIGHT_EXPR int@1 
MOVE LF@IF_STMT LF@IF_LEFT_EXPR 
LT LF@IF_STMT LF@IF_STMT LF@IF_RIGHT_EXPR 
JUMPIFNEQ $else_0 LF@IF_STMT bool@true 
PUSHS string@true 
CALL $strlen 
POPS LF@FUNC_RETURNED_ME_A_VAR_THANK_YOU_FUNC 
DEFVAR LF@var1 
MOVE LF@var1 LF@FUNC_RETURNED_ME_A_VAR_THANK_YOU_FUNC 
JUMP $else_end_2 
LABEL $else_0 
PUSHS string@false 
PUSHS int@1
CALL $write 
LABEL $else_end_2 
DEFVAR LF@year 
MOVE LF@year int@19 
LABEL $while_cycle_3 
MOVE LF@WHILE_LEFT_EXPR LF@year 
ADD LF@WHILE_LEFT_EXPR LF@WHILE_LEFT_EXPR int@1 
MOVE LF@WHILE_RIGHT_EXPR int@25 
MOVE LF@WHILE_STMT LF@WHILE_LEFT_EXPR 
LT LF@WHILE_STMT LF@WHILE_STMT LF@WHILE_RIGHT_EXPR 
JUMPIFNEQ $while_end_4 LF@WHILE_STMT bool@true 
PUSHS string@while| 
PUSHS int@1
CALL $write
ADD LF@year LF@year int@1 
JUMP $while_cycle_3 
LABEL $while_end_4 
PUSHS LF@tmp2 
CALL $hlavni_program 
PUSHS int@23 
CALL $hlavni_program 
POPS LF@FUNC_RETURNED_ME_A_VAR_THANK_YOU_FUNC 
DEFVAR LF@tmp5 
MOVE LF@tmp5 LF@FUNC_RETURNED_ME_A_VAR_THANK_YOU_FUNC 
LABEL $main_end
