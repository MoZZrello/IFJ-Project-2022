.IFJcode22 
JUMP $main 

#ZACALA FUNKCIA WRITE !
LABEL $write 
CREATEFRAME 
PUSHFRAME 
DEFVAR LF@tmp 
DEFVAR LF@type_of_tmp 
DEFVAR LF@num_of_cycles 
POPS LF@num_of_cycles 
LABEL $while_write 
JUMPIFEQ $while_end LF@num_of_cycles int@0 
POPS LF@tmp 
TYPE LF@type_of_tmp LF@tmp 
JUMPIFEQ $writenull LF@type_of_tmp string@nil 
WRITE LF@tmp 
SUB LF@num_of_cycles LF@num_of_cycles int@1 
JUMP $while_write 
POPFRAME 
RETURN 
LABEL $writenull 
WRITE nil@nil 
SUB LF@num_of_cycles LF@num_of_cycles int@1 
JUMP $while_write 
LABEL $while_end 
POPFRAME 
RETURN 

#ZACALA NOVA FUNKCIA !!!!!
LABEL $hlavni_program 
CREATEFRAME 
PUSHFRAME 
DEFVAR LF@IF_STMT 
DEFVAR LF@year 
POPS LF@year 
PUSHS string@\010 
PUSHS LF@year 
PUSHS string@Hello\032from\032IFJ 
PUSHS int@3
CALL $write 
DEFVAR LF@IM_FUNCTION_AND_I_RETURN_THIS 
MOVE LF@IM_FUNCTION_AND_I_RETURN_THIS float@0x1.199999999999ap+0 
INT2FLOAT LF@INT2FLOATVAR int@1 
ADD LF@IM_FUNCTION_AND_I_RETURN_THIS LF@IM_FUNCTION_AND_I_RETURN_THIS LF@INT2FLOATVAR 
DEFVAR LF@return 
MOVE LF@return LF@IM_FUNCTION_AND_I_RETURN_THIS 
PUSHS LF@return 
POPFRAME 
RETURN 


#ZACALA NOVA FUNKCIA !!!!!
LABEL $pohlavni_program 
CREATEFRAME 
PUSHFRAME 
DEFVAR LF@IF_STMT 
DEFVAR LF@month 
POPS LF@month 
DEFVAR LF@year 
POPS LF@year 
PUSHS string@\010 
PUSHS LF@var 
PUSHS string@Hello\032from\032IFJ 
PUSHS int@3
CALL $write 
DEFVAR LF@return 
MOVE LF@return nil@nil 
PUSHS LF@return 
POPFRAME 
RETURN 


LABEL $main 
CREATEFRAME 
PUSHFRAME 
DEFVAR LF@FUNC_RETURNED_ME_A_VAR_THANK_YOU_FUNC 
DEFVAR LF@IF_STMT 
DEFVAR LF@tmp 
MOVE LF@tmp string@ab 
CONCAT LF@tmp LF@tmp string@c 
DEFVAR LF@tmp2 
MOVE LF@tmp2 int@1 
INT2FLOAT LF@tmp2 LF@tmp2 
DEFVAR LF@IF_STMT_0 
MOVE LF@IF_STMT_0 int@1 
DEFVAR LF@IF_STMT_1 
MOVE LF@IF_STMT_1 int@2 
MOVE LF@IF_STMT LF@IF_STMT_0 
DEFVAR LF@ONLY_FOR_GREATER_EQUAL_2 
GT LF@ONLY_FOR_GREATER_EQUAL_2 LF@IF_STMT int@2 
JUMPIFEQ $gt_successful_3 LF@ONLY_FOR_GREATER_EQUAL_2 bool@true 
EQ LF@ONLY_FOR_GREATER_EQUAL_2 LF@IF_STMT int@2 
LABEL $gt_successful_3 
MOVE LF@IF_STMT LF@ONLY_FOR_GREATER_EQUAL_2 
JUMPIFEQ $if_valid_4 LF@IF_STMT bool@true 
JUMPIFNEQ $else_5 LF@IF_STMT bool@true 
LABEL $if_valid_4 
PUSHS string@true 
PUSHS int@1
CALL $write 
JUMP $else_end_5 
LABEL $else_5 
PUSHS string@false 
PUSHS int@1
CALL $write 
LABEL $else_end_5 
PUSHS LF@tmp2 
CALL $hlavni_program 
PUSHS int@23 
CALL $hlavni_program 
POPS LF@FUNC_RETURNED_ME_A_VAR_THANK_YOU_FUNC 
DEFVAR LF@tmp6 
MOVE LF@tmp6 LF@FUNC_RETURNED_ME_A_VAR_THANK_YOU_FUNC 
LABEL $main_end 